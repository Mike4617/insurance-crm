
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }
generator client { provider = "prisma-client-js" }

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  roleId   Int
  role     Role   @relation(fields: [roleId], references: [id])
}

model Client {
  id             Int        @id @default(autoincrement())
  type           String
  legal_name     String
  preferred_name String?
  phone          String?   // store E.164 if possible
  mobile         String?   // store E.164 if possible
  email          String?
  do_not_call    Boolean   @default(false)
  do_not_text    Boolean   @default(false)
  created_at     DateTime  @default(now())

  policies       Policy[]
  interactions   Interaction[]
  tasks          Task[]
}

model Policy {
  id              Int       @id @default(autoincrement())
  client_id       Int
  client          Client    @relation(fields: [client_id], references: [id])
  policy_number   String?
  lob             String
  effective_date  DateTime
  expiration_date DateTime
  premium_amount  Float?
  status          String
  created_at      DateTime  @default(now())

  interactions    Interaction[]
  tasks           Task[]
}

model Interaction {
  id              Int       @id @default(autoincrement())
  client_id       Int
  client          Client    @relation(fields: [client_id], references: [id])
  policy_id       Int?
  policy          Policy?   @relation(fields: [policy_id], references: [id])
  type            String
  direction       String
  subject         String?
  body            String?
  outcome         String?
  call_started_at DateTime?
  duration_sec    Int?
  phone_number    String?
  recording_url   String?
  transcript      String?
  channel         String?   // voice | sms | email | note
  created_at      DateTime  @default(now())

  tasks           Task[]
}

model Task {
  id                 Int       @id @default(autoincrement())
  title              String
  description        String?
  client_id          Int?
  client             Client?   @relation(fields: [client_id], references: [id])
  policy_id          Int?
  policy             Policy?   @relation(fields: [policy_id], references: [id])
  interaction_id     Int?
  interaction        Interaction? @relation(fields: [interaction_id], references: [id])
  assigned_to_user_id Int?
  due_at             DateTime?
  priority           String    @default("normal")
  status             String    @default("open")
  created_at         DateTime  @default(now())
}
